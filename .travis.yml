---
language: go
go:
  - "1.14.2"

matrix:
  include:

    - name: Testing Framework
      os: linux
      services: docker
      before_install:
        - go mod download
        - diff -u <(echo -n) <(gofmt -d $(find . -not -path "./vendor/*" -name "*.go"));
        - sed -i -e "s|COMMITTAG = \"\"|COMMITTAG = \"${TRAVIS_COMMIT}\"|g" service/library/version.go
        - cat service/library/version.go | grep 'COMMITTAG = "'
        - GO111MODULE=on go vet $(go list ./...);
        - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.25.1 golangci-lint run -v
      script:
        # Build
        - make build
        # Test
        - go test -v

    - name: Linux build w/ tests
      os: linux
      services: docker
      before_install:
        - go mod download
        - diff -u <(echo -n) <(gofmt -d $(find . -not -path "./vendor/*" -name "*.go"));
        - sed -i -e "s|COMMITTAG = \"\"|COMMITTAG = \"${TRAVIS_COMMIT}\"|g" service/library/version.go
        - cat service/library/version.go | grep 'COMMITTAG = "'
        - GO111MODULE=on go vet $(go list ./...);
        - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.25.1 golangci-lint run -v
      script:
        # Build
        - go build -o pygmy-go-linux-x86
        # Run pygmy
        - ./pygmy-go-linux-x86 status;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml up;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml status;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml version;
        # Test the amazeeio-network for expected results
        - >
          docker network inspect amazeeio-network | jq '.[].Name' | grep "amazeeio-network";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].Name' | grep "amazeeio-haproxy";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].Name' | grep "amazeeio-mailhog";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].Name' | grep "amazeeio-portainer";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].IPv4Address';
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].IPv4Address' | grep "10.99.99.";
        # Test for configured container tags.
        - >
          docker inspect amazeeio-dnsmasq   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-dnsmasq   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-dnsmasq   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-haproxy   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-haproxy   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-haproxy   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-portainer | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-portainer | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-portainer | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-ssh-agent | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-ssh-agent | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-ssh-agent | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-mailhog   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-mailhog   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-mailhog   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";

        # Real-world Drupal test.
        - git clone https://github.com/amazeeio/drupal-example.git drupal8-lagoon && cd drupal8-lagoon
        - docker-compose up -d
        - docker-compose exec cli composer install
        - curl --HEAD http://drupal-example.docker.amazee.io
        # Cleanup example
        - docker-compose down
        - cd ../
        # Cowsay test
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml down;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml up | grep '< holy ship >';
        # Cleanup pygmy
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml down;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml clean;

    - name: GitHub Actions simulation
      os: linux
      services: docker
      before_install:
        - sudo apt-get install golang-go -y
        - curl https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash

      script:
        - act -l
        - act push --verbose || true
        - stat ./dist/pygmy-go_darwin_amd64/pygmy-go
        - stat ./dist/pygmy-go_linux_amd64/pygmy-go
        - stat ./dist/pygmy-go_windows_amd64/pygmy-go.exe
        - ./dist/pygmy-go_linux_amd64/pygmy-go version
        - ./dist/pygmy-go_linux_amd64/pygmy-go status

    - name: Windows build
      os: windows
      services: docker
      before_install:
        - go mod download
        - GO111MODULE=on go vet $(go list ./...);
        - sed -i -e "s|COMMITTAG = \"\"|COMMITTAG = \"${TRAVIS_COMMIT}\"|g" service/library/version.go
        - cat service/library/version.go | grep 'COMMITTAG = "'

      script:
        - export PYGMY_PATH=pygmy-go.exe;

        - go mod vendor
        - rm -f go.mod
        - rm -f go.sum
        - go build -o pygmy-go.exe .
        - cp pygmy-go.exe builds/pygmy-go.exe

        - builds/${PYGMY_PATH} --config examples/pygmy.travis.yml status;
        - builds/${PYGMY_PATH} --config examples/pygmy.travis.yml version;

notifications:
  slack: fubarhouse:upHoIzmKb4ikkBOt2cOwgKXY